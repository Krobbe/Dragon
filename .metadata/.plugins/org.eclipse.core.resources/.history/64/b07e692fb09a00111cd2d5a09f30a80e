/**
 * 
 */
package remote;

import java.rmi.Remote;
import java.rmi.RemoteException;
import java.util.List;

import model.card.Card;
import model.card.iCard;
import model.game.Pot;
import model.player.Bet;
import model.player.iPlayer;
import model.player.hand.iHand;

/**
 * @author robinandersson
 *
 */
public interface iClientGame extends Remote {
	
	public void setPot(Pot pot);
	
	/**
	 * A method for handling when a player has folded. 
	 * 
	 * @param player	The player who folded.
	 * @return	true if the fold went through.
	 */
	public boolean fold(iPlayer player);
	
	public boolean betOccured(Bet b);
	
	public boolean nextTurn(iPlayer nextPlayer);
	
	public void setTurn(int indexOfCurrentPlayer);
	
	public void addCommunityCards(List<iCard> cards);
	
	public void setHand(iPlayer player, iHand hand);
		
	/**
	 * A method for setting a player active or inactive.
	 * 
	 * @param player The player.
	 * @param b	The boolean you want to set.
	 */
	public void setActive(iPlayer player, boolean b);
	
	public void setPlayerOwnCurrentBet(Bet bet);
	
	/**
	 * Set up a new round.
	 */
	public void newRound();

}
