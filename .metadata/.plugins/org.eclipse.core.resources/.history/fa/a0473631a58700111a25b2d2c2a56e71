package model.player.hand;

import static org.junit.Assert.*;

import model.game.Card;

import org.junit.Test;

public class HandEvaluatorTest {
	FullTHHand hand = new FullTHHand();
	
	
	@Test
	public void testFindFlush() {
		hand.addCard(new Card(Card.Suit.DIAMONDS, Card.Rank.ACE));
		hand.addCard(new Card(Card.Suit.DIAMONDS, Card.Rank.KING));
		hand.addCard(new Card(Card.Suit.DIAMONDS, Card.Rank.QUEEN));
		hand.addCard(new Card(Card.Suit.DIAMONDS, Card.Rank.JACK));
		hand.addCard(new Card(Card.Suit.DIAMONDS, Card.Rank.NINE));

		HandEvaluator h = new HandEvaluator(hand);
		assertTrue(h.getType().equals(HandValueType.FLUSH));
	}
	
	@Test
	public void testFindStraight() {
		hand.addCard(new Card(Card.Suit.DIAMONDS, Card.Rank.ACE));
		hand.addCard(new Card(Card.Suit.DIAMONDS, Card.Rank.KING));
		hand.addCard(new Card(Card.Suit.DIAMONDS, Card.Rank.QUEEN));
		hand.addCard(new Card(Card.Suit.DIAMONDS, Card.Rank.JACK));
		hand.addCard(new Card(Card.Suit.HEARTS, Card.Rank.TEN));
		
		HandEvaluator h = new HandEvaluator(hand);
		assertTrue(h.getType().equals(HandValueType.STRAIGHT));
	}
	
	@Test
	public void testFindDuplicates() {
		hand.addCard(new Card(Card.Suit.DIAMONDS, Card.Rank.ACE));
		hand.addCard(new Card(Card.Suit.DIAMONDS, Card.Rank.KING));
		hand.addCard(new Card(Card.Suit.DIAMONDS, Card.Rank.QUEEN));
		hand.addCard(new Card(Card.Suit.DIAMONDS, Card.Rank.JACK));
		hand.addCard(new Card(Card.Suit.HEARTS, Card.Rank.ACE));
		
		HandEvaluator h = new HandEvaluator(hand);
		assertTrue(h.getType().equals(HandValueType.ONE_PAIR));
		
		
	}


}
